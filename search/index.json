[{"content":" pytorch环境相当于一个package，package里面有不同的区域，不同的区域有不同的工具。 Python语法有两大法宝：dir()、help() 函数。 dir()：打开，看见里面有多少分区、多少工具。 help(): 说明书。 ","date":"2025-04-14T00:00:00Z","permalink":"https://xiaoyuia.github.io/xiaoyuia-gzj.github.io/p/103_python%E5%AD%A6%E4%B9%A0%E4%B8%AD%E7%9A%84%E4%B8%A4%E5%A4%A7%E6%B3%95%E5%AE%9D%E5%87%BD%E6%95%B0/","title":"103_Python学习中的两大法宝函数"},{"content":"Pytorch加载数据 Pytorch加载数据需要Dataset、Dataloader\nDataset提供一种方式去获取每个数据及其对应的label，告诉我们总共有多少个数据。 Dataloader为后面的网络提供不同的数据形式，它将一批一批数据进行一个打包。 常用数据集两种方式 常用的第一种数据形式，文件夹的名称是它的label。 常用的第二种形式，lebel为文本格式，文本名称为图片名称，文本中的内容为对应的label。 路径直接加载数据 f i i i r m m m o g g g m _ . p = s P a h I t I o L h m w a ( i = g ) m e p \" . o D o r a p t t e a n I / ( m F i a i m g r g e s _ t p T a y t p h e ) D a t a / t r a i n / a n t s / 0 0 1 3 0 3 5 . j p g \" Dataset加载路径 f f i c r a b a b p p t p i p i r r m l o n e n e r r r r m r m o o p a o t e t e i i a i g i g m m o s t s s s s n n i n , n . r s d d d _ _ _ _ _ t t n t l t s t P t e e e d l l d d ( ( _ ( a ( h o I M f f f i a a a a l l d l b \" o r L o y r b b t t e e a e e l w c s D s s s s i i i l r r e e a a n n t n l a ( h i a _ e e e e _ m m m a e _ e = l l s s ( ( a ( b ) . m t i l l l l g g g g b t l t _ _ e e a b s t = e u p a n f f f f e _ _ e u e u \" d d t t n e e r l t o ( i . . . . t n i = l r n r D i i t e t a t ： i r D t r l p i i a t n _ n a r r = = s s i r \" l t a _ o a a m t m e I = _ t _ _ = n a , s t _ o b t g e e m m i ( l a = = M M d d _ i l . I a ( t e h _ m _ a s m s e / y y a a a d n a d m s s _ l p _ = p g e g e n F \" \" D D t t n a _ b a a e e d _ = a _ a e l , l ( i a b a a a a t t d e t g t l i d t ( s t . f f s r n e t t s s s a a l a e ) f r i o h s e h o . l ) e s t e a a e e _ s t ) : , r s e l p l a : l t s s ( ( t t d e a i r = . = l f = e a b f T \" \" r r ) ) a t s m o = p f . n b e . y o o ) ) t ) e p o r a o , i o ( e l i p o o a ) t o t o l t s i m s i l m e t t s [ r _ o a h . d g . m _ g D _ _ e 2 t d t b . l x _ p g d _ a d d t 0 i _ e j i ) p a _ i p t i i 0 D r d l o s : a t i r a a r r + ] a , i _ i t t h t t / , , t l r d n d h . e h t b a a i ( i [ j m ) r a b e s b # r s r i o _ a n e e e e e ( d i p i t e s t l s l s x n a n s s _ _ e f e ] ( t \" _ _ d d l . l s h l l a i f r f e ) a a t r . o . l b b a ) r o p f e e s : o t a . l l e o _ t r _ _ t t d h o d d _ i ) o i i # d r t r r # i , # _ ) ) t r s d r 该 e 获 i a 魔 相 l 得 r i 术 当 f 路 , n 方 于 . 径 s _ 法 类 l 下 e d 当 中 a 所 l a 创 的 b 有 f t 建 全 e 图 . a 一 局 l 片 l s 个 变 _ 的 a e 事 量 d 地 b t 例 i 址 e 对 r l 就 象 ) _ 是 时 d 两 ， # i 个 会 r 数 自 字 , 据 动 符 i 集 调 串 m 的 用 拼 g 集 该 接 _ 合 函 ， n 了 数 根 a 据 m 是 e W ) i n d o w s 或 L i x u s 系 统 情 况 进 行 拼 接 ","date":"2025-04-14T00:00:00Z","permalink":"https://xiaoyuia.github.io/xiaoyuia-gzj.github.io/p/104_pytorch%E5%8A%A0%E8%BD%BD%E6%95%B0%E6%8D%AE%E5%88%9D%E8%AE%A4%E8%AF%86/","title":"104_PyTorch加载数据初认识"},{"content":"Tensorboard用途 Tensorboad 可以用来查看loss是否按照我们预想的变化，或者查看训练到某一步输出的图像是什么样。\nTensorboard使用 进入pytorch环境，输入pip install tensorboard。\n例如：\n1.新建test_tb.py文件，并运行下列代码 f # w f w r r o r o 创 i r i m 建 t t 一 e i # w e t 个 r r r o l i 第 i . r o = n 二 t c c g 个 e l h s S r 参 r o . 文 u a 数 . s u 件 m n 为 a e t 夹 m g y d ( i ， a e 轴 d ) l w r ( ， _ s r y 1 第 s . i W 0 三 c t t r 0 个 a e e i ) 参 l n r t : 数 a s 写 e 为 r o 的 r x ( r 文 ( 轴 \" b 件 \" y o 都 l = a 在 o 2 r 该 g x d 文 s \" 件 \" , i 夹 ) m 下 2 p * o i r , t i S ) u m m a r y W r i t e r 2.在PyCharm终端控制台输入tensorboard --logdir=logs 运行tensorboard 输入tensorboard --logdir=logs --port=6007可以更改端口避免端口冲突\n3.完整代码 f i f # w i i # i # w f w r m r r m m m r o r o p o 创 i a g 将 g 从 i r i m o m 建 t g _ 图 _ P t t r 一 e e P 像 a I e i # w e t t P 个 r _ I 从 r L r r r o I l p L P r 到 . i 第 i . r n L o = a I a n a n 二 t c c u g t = L y u d 个 e l h m i s S h 格 m d r 参 r o . p m 文 u I 式 = p _ a 数 . s u y p 件 m = m 转 y i n 为 a e t o 夹 m a 为 n ， m g y d ( i a r ， a \" g n p 需 a e 轴 d ) l s t w r d e u . 要 g ( ， _ s r y a . m a 在 e 1 第 s . n I i W t o p r a ( 0 三 c t p m t r a p y r d \" 0 个 a e a e i s e . a d t ) 参 l n g r t e n n y _ e : 数 a s e 写 e t ( d ( i s 为 r o 的 r / i a i m t x ( r 文 ( t m r m a \" 轴 \" b 件 \" r a r g g , y o 都 l a g a _ e i = a 在 o i e y P ( m 2 r 该 g n _ ， I ) g x d 文 s / p 具 L 中 _ \" 件 \" a a 体 ) 指 a , i 夹 ) n t 查 定 r m 下 t h 看 s r 2 p s ) a h a * o _ d a y i r i d p , , t m _ e 1 a i 中 , i S g m 每 ) u e a 一 d m / g 个 a m 0 e 数 t a 0 函 字 a r 1 数 / f y 3 维 o W 0 表 r r 3 示 m i 5 的 a t . 含 t e j 义 s r p = g \" \" H W C \" ) ","date":"2025-04-14T00:00:00Z","permalink":"https://xiaoyuia.github.io/xiaoyuia-gzj.github.io/p/105_tensorboard%E7%9A%84%E4%BD%BF%E7%94%A8/","title":"105_Tensorboard的使用"},{"content":"PyCharm 进入官网https://www.jetbrains.com/pycharm/download/other.html 选择community 2024.1.4版本下载安装\n新建项目\n![[Pasted image 20250413194842.png]]\n新建一个test文件，打开Settings对话框，选择当前项目中的Python Interpreter ——\u0026gt; Add Interpreter，选择anaconda/Scripts/conda.exe，选择完成之后加载环境，新建项目\n![[Pasted image 20250413195310.png]]\n新建项目后打开PyCharm的Python Console输入import torch （若报错，尝试重启电脑） ——\u0026gt; 输入torch.cuda.is_available()，返回True则说明成功创建项目\nJupyter（在环境中安装Jupyter） 打开anaconda Prompt，输入pip install notebook指令，安装完成后输入jupyter notebook即可正常启动jupyter Notebook\n","date":"2025-04-13T00:00:00Z","permalink":"https://xiaoyuia.github.io/xiaoyuia-gzj.github.io/p/101_python%E7%BC%96%E8%BE%91%E5%99%A8%E7%9A%84%E9%80%89%E6%8B%A9%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEpycharmjupyter/","title":"101_Python编辑器的选择、安装及配置（Pycharm、Jupyter）"},{"content":"安装Python版本 打开Anaconda的Prompt终端，输入jupyter kernelspec list，查看已经安装的Python版本。如下图所示，只有Anaconda自带的Python3\n![[Pasted image 20250413160000.png]]\n输入conda create -n pytorch python=3.10 ，输入[y]/n 时输入 y ，创建 pytorch 虚拟环境，它会安装 python3.10 到 anaconda3 的 env 目录下。\n输入conda activate pytorch 激活pytorch环境后，在pytorch.org官网，找到下图安装指令，复制输入命令即可安装。 使用pip list可以查看版本\n![[Pasted image 20250413162503.png]]\n输入python，进入python环境 输入import torch，如果没有报错就说明pytorch安装成功 输入torch.cuda.is_available() ，如果显示TRUE，说明pytorch可以使用gpu\n![[Pasted image 20250413163314.png]]\n","date":"2025-04-13T00:00:00Z","permalink":"https://xiaoyuia.github.io/xiaoyuia-gzj.github.io/p/102_pytorch%E7%8E%AF%E5%A2%83%E7%9A%84%E9%85%8D%E7%BD%AE%E5%8F%8A%E5%AE%89%E8%A3%85/","title":"102_PyTorch环境的配置及安装"},{"content":"1.设置Git全局用户信息 git config user.email \u0026quot;你的邮箱\u0026quot; git config user.name \u0026quot;你的用户名\u0026quot; 2.配置Git使用代理（如果有代理） git config --global http.proxy http://127.0.0.1:代理端口号 git config --global https.proxy http://127.0.0.1:代理端口号 3.确保在项目根目录（非public） cd D:\\hugo\\dev hugo serve -D //启动hugo 4.生成静态文件并推送到远程仓库 hugo -D cd public git add . git commit -m \u0026quot;更新内容\u0026quot; git push -u origin main ","date":"2025-04-12T00:00:00Z","permalink":"https://xiaoyuia.github.io/xiaoyuia-gzj.github.io/p/obsidian%E5%90%8C%E6%AD%A5%E5%88%B0github/","title":"obsidian同步到github"},{"content":"Transforms的用途 Transforms当成工具箱的话，里面的class就是不同的工具。例如像totensor、resize这些工具。 Transforms拿一些特定格式的图片，经过Transforms里面的工具，获得我们想要的结果。 Transforms该如何使用 1.transforms.Totensor的使用 f f i i t t r r m m e e o o g g n n m m _ s s p = o o t P a r r o I t I _ _ r L h m t i c a r m h i = g a g v m e n i p \" . s = s o d o i r a p = t o t t e e n a n t n I s ( r s i m e i a o m a t m n r p g / g s _ o e t _ f t r r p o r t a a r a i t m n t n h s s r / ) . ( a b T i n e o m s e T g f s e ) o _ n r i s m m o # s a r g ( 调 e ) 用 / 1 t 6 # r 8 a 3 创 n 8 建 s 6 f 4 t o 8 r r _ a m 4 n s 1 s . 5 f T a o o c r T d m e 9 s n e . s 3 T o f o r . T 类 j e p n 的 g s _ \" o _ r c 类 a l 的 l 实 _ 例 _ 化 的 对 魔 象 术 方 法 p r i n t ( t e n s o r _ i m g ) 2.需要Tensor数据类型的原因 Tensor有一些属性，比如反向传播、梯度等属性，它包装了神经网络需要的一些属性。 f f f i i w t t w w r r r m m r e e r r o o o g g i n n i i m m m _ t s s t t p = e o o e e t t P a r r r r r o o I t I _ _ . . r r L h m = t i a c c c a r m d l h h i = g S a g d o . v m e u n _ s u i p \" . m s = i e t s o d o m m ( i i r a p a = t a ) l o t t e r e g s n a n y t n e . I s ( W r s ( t i m e i r a o \" e m a t m i n r T n p g / g t s _ e s o e t _ e f t n o r r p r o r s r t a a ( r a o b i t \" m n r o t n h l s s _ a r / ) o . ( i r a b g T i m d n e s o m g s e \" T g \" i f s ) e ) , m o _ n p r i s t o m m o # e r s a r n t g ( 调 s e ) 用 o S / r u 1 t _ m 6 # r i m 8 a m a 3 创 n g r 8 建 s ) y 6 f W 4 t o r 8 r r i _ a m t 4 n s e 1 s . r 5 f T a o o c r T d m e 9 s n e . s 3 T o f o r . T 类 j e p n 的 g s _ \" o _ r c 类 a l 的 l 实 _ 例 _ 化 的 对 魔 象 术 方 法 在Terminal终端输入tensorboard --logdir=\u0026quot;logs\u0026quot;，打开tensorboard网址查看。 3.常见的Transforms工具 ","date":"0001-01-01T00:00:00Z","permalink":"https://xiaoyuia.github.io/xiaoyuia-gzj.github.io/p/","title":""}]