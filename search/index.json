[{"content":"","date":"2025-04-14T00:00:00Z","permalink":"https://xiaoyuia.github.io/xiaoyuia-gzj.github.io/p/103_python%E5%AD%A6%E4%B9%A0%E4%B8%AD%E7%9A%84%E4%B8%A4%E5%A4%A7%E6%B3%95%E5%AE%9D%E5%87%BD%E6%95%B0/","title":"103_Python学习中的两大法宝函数"},{"content":"PyCharm 进入官网https://www.jetbrains.com/pycharm/download/other.html 选择community 2024.1.4版本下载安装\n新建项目\n![[Pasted image 20250413194842.png]]\n新建一个test文件，打开Settings对话框，选择当前项目中的Python Interpreter ——\u0026gt; Add Interpreter，选择anaconda/Scripts/conda.exe，选择完成之后加载环境，新建项目\n![[Pasted image 20250413195310.png]]\n新建项目后打开PyCharm的Python Console输入import torch （若报错，尝试重启电脑） ——\u0026gt; 输入torch.cuda.is_available()，返回True则说明成功创建项目\nJupyter（在环境中安装Jupyter） 打开anaconda Prompt，输入pip install notebook指令，安装完成后输入jupyter notebook即可正常启动jupyter Notebook\n","date":"2025-04-13T00:00:00Z","permalink":"https://xiaoyuia.github.io/xiaoyuia-gzj.github.io/p/101_python%E7%BC%96%E8%BE%91%E5%99%A8%E7%9A%84%E9%80%89%E6%8B%A9%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AEpycharmjupyter/","title":"101_Python编辑器的选择、安装及配置（Pycharm、Jupyter）"},{"content":"安装Python版本 打开Anaconda的Prompt终端，输入jupyter kernelspec list，查看已经安装的Python版本。如下图所示，只有Anaconda自带的Python3\n![[Pasted image 20250413160000.png]]\n输入conda create -n pytorch python=3.10 ，输入[y]/n 时输入 y ，创建 pytorch 虚拟环境，它会安装 python3.10 到 anaconda3 的 env 目录下。\n输入conda activate pytorch 激活pytorch环境后，在pytorch.org官网，找到下图安装指令，复制输入命令即可安装。 使用pip list可以查看版本\n![[Pasted image 20250413162503.png]]\n输入python，进入python环境 输入import torch，如果没有报错就说明pytorch安装成功 输入torch.cuda.is_available() ，如果显示TRUE，说明pytorch可以使用gpu\n![[Pasted image 20250413163314.png]]\n","date":"2025-04-13T00:00:00Z","permalink":"https://xiaoyuia.github.io/xiaoyuia-gzj.github.io/p/102_pytorch%E7%8E%AF%E5%A2%83%E7%9A%84%E9%85%8D%E7%BD%AE%E5%8F%8A%E5%AE%89%E8%A3%85/","title":"102_PyTorch环境的配置及安装"},{"content":"1.设置Git全局用户信息 git config user.email \u0026quot;你的邮箱\u0026quot; git config user.name \u0026quot;你的用户名\u0026quot; 2.配置Git使用代理（如果有代理） git config --global http.proxy http://127.0.0.1:代理端口号 git config --global https.proxy http://127.0.0.1:代理端口号 3.确保在项目根目录（非public） cd D:\\hugo\\dev hugo serve -D //启动hugo 4.生成静态文件并推送到远程仓库 hugo -D cd public git add . git commit -m \u0026quot;更新内容\u0026quot; git push -u origin main ","date":"2025-04-12T00:00:00Z","permalink":"https://xiaoyuia.github.io/xiaoyuia-gzj.github.io/p/obsidian%E5%90%8C%E6%AD%A5%E5%88%B0github/","title":"obsidian同步到github"}]